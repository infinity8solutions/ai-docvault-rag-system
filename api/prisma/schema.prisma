// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  first_name String?
  last_name  String?
  password   String
  profile    String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  posts      Post[]
  projects   Project[]
  documents  Document[]

  @@map("users")
}

model Post {
  id         Int      @id @default(autoincrement())
  content    String
  view_count Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  created_by User     @relation(fields: [author_id], references: [id])
  author_id  Int
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  user_id     Int
  user        User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  documents   Document[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@map("projects")
}

model Document {
  id                Int              @id @default(autoincrement())
  project_id        Int
  user_id           Int
  filename          String           @db.VarChar(255)
  original_filename String           @db.VarChar(255)
  file_type         String           @db.VarChar(50)
  file_size         BigInt
  mime_type         String           @db.VarChar(100)
  storage_path      String
  ingestion_status  String           @default("pending") @db.VarChar(20)
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  project           Project          @relation(fields: [project_id], references: [id], onDelete: Cascade)
  user              User             @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([project_id])
  @@index([user_id])
  @@map("documents")
}

enum Role {
  USER
  ADMIN
  DEV
}
